c(ASP) Internal Documentation
=============================

Introduction
------------

c(ASP) is the CIAO ported version of s(ASP), s(ASP) is an
implementation of the stable model semantics of logic
programming. Unlike similar systems, it does not employ any form of
grounding. This allows s(ASP) to execute programs that are not
finitely groundable, including those which make use of lists and
terms. Work on s(ASP) is supported by the National Science Foundation
under Grant No. 1423419 visit
https://sourceforge.net/projects/sasp-system/ for the s(ASP) source
code.

Installation of c(ASP) - Only tested in Mac-OS
---------------------

To run c(ASP) you need CIAO Prolog working in your computer:
visit http://ciao-lang.org/ for the last CIAO stable version.

Then compile the c(ASP) source code using:

ciaoc -x -o casp main.pl

it generates an executable file named casp which you can place
wherever you want...

Execution of c(ASP)
-------------------

To obtain one model of the program (i.e. test.pl)
   $ ./casp test.pl
   Answer: 1
   { q(?Var6), not p(?Var6) }
   $

To obtain all the models (answers) of test.pl
   $ ./casp -s0 test.pl

To obtain 5 answers of test.pl
   $ ./casp -s5 test.pl

To print the "translation" of the code (with duals predicates and
check-rules)
   $ ./casp -d0 test.pl

To use casp with its iterative mode:
   $ ./casp -i test.pl
   ?- p(X).
   { p(?Var6), not q(?Var6) } ? 

   false.
   ?- q(X).
   { q(?Var6), not p(?Var6) } ? ;

   false.
   ?- halt.
   $

The example program test.pl is:
   p(X) :- not q(X).
   q(X) :- not p(X).

   ?- q(X).

Note that the program include the query in order to be use without
iterative mode...


Generation of the HTML justification tree
-----------------------------------------

To generate the html justification tree the execution should be made
from the src directory:
   $ ./casp -w test.pl
   Answer: 1
   { q(?Var6), not p(?Var6) }

   BEGIN HTML JUSTIFICATION
   END HTML JUSTIFICATION
   $

the justification tree is a file named justification.html place in the
sub-directory html/ where there are the css/ and js/ directories needed
by the justification.html file.

In order to generate the justification of each answers use the
iterative mode and refresh the justification.html file in the browser:
   $ ./casp -w -i test.pl
   ?- ...



Use of a browser local_interface
--------------------------------

c(ASP) provide a tool called 'web_casp' which run a html/php
local_interface allowing the execution of c(ASP) programs with user
queries and provide the results in a html file showing the HTML
justification tree

The installation is similar to casp:

    $ ciaoc -x -o web_casp web_casp.pl

And it execution is simpler:

    $ ./web_casp

It run php to create a localhost server and then open the index file
located in the directory 'src/server/'.

'Index.html' provides a form where we specify the location of a
c(ASP) program (using reference path from 'src/server/') and a query
(if the query field is empty the program execute the query specify in
the c(ASP) program.

As an example:
   Program:   ../../test/hanoi.pl
   Query:     ?- hanoi(4,Y).

Pressing the button 'Submit' c(ASP) evaluate the program
'../../test/hanoi.pl' and the query '?- hanoi(4,Y) and present the results
in the next page ('html/justification') with its justification.

